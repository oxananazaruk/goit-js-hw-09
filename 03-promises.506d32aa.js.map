{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAdKQ,SAASC,cAAc,SAE9BC,iBAAiB,UAgB5B,SAA+BC,GAC7BA,EAAMC,iBACN,IAAIC,GAAcF,EAAMG,cAAcd,MAAMe,MAC5C,MAAMC,GAAaL,EAAMG,cAAcG,KAAKF,MACtCG,GAAeP,EAAMG,cAAcK,OAAOJ,MAEhD,IAAK,IAAIK,EAAI,EAAGA,EAAIF,EAAaE,GAAK,EAAG,CAEzCtB,EAAcsB,EAAI,EADKP,EAAaG,EAAYI,GAE/CC,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA0B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,MAAU,IAEhEwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA0B,OAAOG,QAAQ,sBAAoB1B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formInput = document.querySelector('.form');\n\n formInput.addEventListener('submit', onSubmitCreatePromise);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay)\n  })\n};\n\nfunction onSubmitCreatePromise(event) {\n  event.preventDefault();\n  let inputDelay = +event.currentTarget.delay.value;\n  const delayStep = +event.currentTarget.step.value;\n  const inputAmount = +event.currentTarget.amount.value;\n\n  for (let i = 0; i < inputAmount; i += 1) {\n    const promiseDelay = inputDelay + delayStep * i;\n  createPromise(i + 1, promiseDelay)\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  })\n    }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","inputDelay","currentTarget","value","delayStep","step","inputAmount","amount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.506d32aa.js.map"}