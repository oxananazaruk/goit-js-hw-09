{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAdWQ,SAASC,cAAc,SAE9BC,iBAAiB,UAgB5B,SAA+BC,GAC7BA,EAAMC,iBAKN,IAJA,IAAMC,GAAcF,EAAMG,cAAcd,MAAMe,MACxCC,GAAaL,EAAMG,cAAcG,KAAKF,MACtCG,GAAeP,EAAMG,cAAcK,OAAOJ,MAEvCK,EAAI,EAAGA,EAAIF,EAAaE,GAAK,EAAG,CAEzCtB,EAAcsB,EAAI,EADKP,EAAaG,EAAYI,GAE/CC,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBJ,EAAA2B,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAE9D0B,OAAM,SAAAJ,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBJ,EAAA2B,OAAOI,QAAQ,sBAAqCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formInput = document.querySelector('.form');\n\n formInput.addEventListener('submit', onSubmitCreatePromise);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay)\n  })\n};\n\nfunction onSubmitCreatePromise(event) {\n  event.preventDefault();\n  const inputDelay = +event.currentTarget.delay.value;\n  const delayStep = +event.currentTarget.step.value;\n  const inputAmount = +event.currentTarget.amount.value;\n\n  for (let i = 0; i < inputAmount; i += 1) {\n    const promiseDelay = inputDelay + delayStep * i;\n  createPromise(i + 1, promiseDelay)\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  })\n    }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","inputDelay","currentTarget","value","delayStep","step","inputAmount","amount","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.ef37a5c9.js.map"}